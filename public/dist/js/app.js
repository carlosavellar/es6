"use strict";var _slicedToArray=function(r,t){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return function(r,t){var e=[],o=!0,n=!1,i=void 0;try{for(var a,s=r[Symbol.iterator]();!(o=(a=s.next()).done)&&(e.push(a.value),!t||e.length!==t);o=!0);}catch(r){n=!0,i=r}finally{try{!o&&s.return&&s.return()}finally{if(n)throw i}}return e}(r,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},question=new Map;question.set("question","What is the best Metal Band of the World?"),question.set(1,"Pantera"),question.set(2,"Iron Myden"),question.set(3,"Agnostic Front"),question.set(4,"Headbreed"),question.set("correct",4),question.set(!0,"Correct answear"),question.set(!1,"Wrong MDF"),question.has(4)&&console.log("The possible cool answear is HERE");var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=question.entries()[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var _ref=_step.value,_ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];if("number"==typeof key){var ans=parseInt(prompt("Answer the question"));console.log(question.get(ans===question.get("correct"))),console.log(ans)}}}catch(r){_didIteratorError=!0,_iteratorError=r}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}
//# sourceMappingURL=data:application/json;base64,
